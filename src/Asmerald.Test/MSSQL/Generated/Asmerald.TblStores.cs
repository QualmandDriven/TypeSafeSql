/*
This file was automatically generated by Asmerald.Generate library / executable.
It is not recommened to make manual changes in this file as any changes to this file will be overwritten when the next generation happens.
In case you need modifications please refer to adjusting the generation process itself.
This is possible by creating your own executable project and referencing or forking Asmerald.Generate library / executable.
*/

using System;
using Asmerald;
using Asmerald.Columns;

namespace master
{
    public partial class sales
    {
        public static TblStores stores() => new TblStores();
        public class TblStores : ITable{
            string ITable.Name() => "sales.stores";
            public Col_Store_id Store_id() => new Col_Store_id();
            public Col_Store_name Store_name() => new Col_Store_name();
            public Col_Phone Phone() => new Col_Phone();
            public Col_Email Email() => new Col_Email();
            public Col_Street Street() => new Col_Street();
            public Col_City City() => new Col_City();
            public Col_State State() => new Col_State();
            public Col_Zip_code Zip_code() => new Col_Zip_code();
            public static Col_Store_id Store_id(string tableAlias = "") => new Col_Store_id(tableAlias);
            public static Col_Store_name Store_name(string tableAlias = "") => new Col_Store_name(tableAlias);
            public static Col_Phone Phone(string tableAlias = "") => new Col_Phone(tableAlias);
            public static Col_Email Email(string tableAlias = "") => new Col_Email(tableAlias);
            public static Col_Street Street(string tableAlias = "") => new Col_Street(tableAlias);
            public static Col_City City(string tableAlias = "") => new Col_City(tableAlias);
            public static Col_State State(string tableAlias = "") => new Col_State(tableAlias);
            public static Col_Zip_code Zip_code(string tableAlias = "") => new Col_Zip_code(tableAlias);
            public class Col_Store_id : IntegerColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "store_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Store_id() { }
                public Col_Store_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
            public class Col_Store_name : StringColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "store_name";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Store_name() { }
                public Col_Store_name(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
            public class Col_Phone : StringColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "phone";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Phone() { }
                public Col_Phone(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
            public class Col_Email : StringColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "email";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Email() { }
                public Col_Email(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
            public class Col_Street : StringColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "street";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Street() { }
                public Col_Street(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
            public class Col_City : StringColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "city";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_City() { }
                public Col_City(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
            public class Col_State : StringColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "state";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_State() { }
                public Col_State(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
            public class Col_Zip_code : StringColumn<TblStores>, ISelectColumn<TblStores>, ISelectColumnAlias<TblStores>
            {
                private readonly string _name = "zip_code";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Zip_code() { }
                public Col_Zip_code(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStores> As(string name) => new AliasColumn<TblStores>(this, name);
                public override ISelectColumn<TblStores> Count() => new CountColumn<TblStores>(this);
            }
        }
    }
}
