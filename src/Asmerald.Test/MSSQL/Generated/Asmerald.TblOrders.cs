/*
This file was automatically generated by Asmerald.Generate library / executable.
It is not recommened to make manual changes in this file as any changes to this file will be overwritten when the next generation happens.
In case you need modifications please refer to adjusting the generation process itself.
This is possible by creating your own executable project and referencing or forking Asmerald.Generate library / executable.
*/

using System;
using Asmerald;
using Asmerald.Columns;

namespace master
{
    public partial class sales
    {
        public static TblOrders orders() => new TblOrders();
        public class TblOrders : ITable{
            string ITable.Name() => "sales.orders";
            public Col_Order_id Order_id() => new Col_Order_id();
            public Col_Customer_id Customer_id() => new Col_Customer_id();
            public Col_Order_status Order_status() => new Col_Order_status();
            public Col_Order_date Order_date() => new Col_Order_date();
            public Col_Required_date Required_date() => new Col_Required_date();
            public Col_Shipped_date Shipped_date() => new Col_Shipped_date();
            public Col_Store_id Store_id() => new Col_Store_id();
            public Col_Staff_id Staff_id() => new Col_Staff_id();
            public static Col_Order_id Order_id(string tableAlias = "") => new Col_Order_id(tableAlias);
            public static Col_Customer_id Customer_id(string tableAlias = "") => new Col_Customer_id(tableAlias);
            public static Col_Order_status Order_status(string tableAlias = "") => new Col_Order_status(tableAlias);
            public static Col_Order_date Order_date(string tableAlias = "") => new Col_Order_date(tableAlias);
            public static Col_Required_date Required_date(string tableAlias = "") => new Col_Required_date(tableAlias);
            public static Col_Shipped_date Shipped_date(string tableAlias = "") => new Col_Shipped_date(tableAlias);
            public static Col_Store_id Store_id(string tableAlias = "") => new Col_Store_id(tableAlias);
            public static Col_Staff_id Staff_id(string tableAlias = "") => new Col_Staff_id(tableAlias);
            public class Col_Order_id : IntegerColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "order_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Order_id() { }
                public Col_Order_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
            public class Col_Customer_id : IntegerColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "customer_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Customer_id() { }
                public Col_Customer_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
            public class Col_Order_status : ByteColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "order_status";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Order_status() { }
                public Col_Order_status(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
            public class Col_Order_date : DateTimeColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "order_date";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Order_date() { }
                public Col_Order_date(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
            public class Col_Required_date : DateTimeColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "required_date";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Required_date() { }
                public Col_Required_date(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
            public class Col_Shipped_date : DateTimeColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "shipped_date";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Shipped_date() { }
                public Col_Shipped_date(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
            public class Col_Store_id : IntegerColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "store_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Store_id() { }
                public Col_Store_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
            public class Col_Staff_id : IntegerColumn<TblOrders>, ISelectColumn<TblOrders>, ISelectColumnAlias<TblOrders>
            {
                private readonly string _name = "staff_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Staff_id() { }
                public Col_Staff_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblOrders> As(string name) => new AliasColumn<TblOrders>(this, name);
                public override ISelectColumn<TblOrders> Count() => new CountColumn<TblOrders>(this);
            }
        }
    }
}
