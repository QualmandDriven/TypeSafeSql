/*
This file was automatically generated by Asmerald.Generate library / executable.
It is not recommened to make manual changes in this file as any changes to this file will be overwritten when the next generation happens.
In case you need modifications please refer to adjusting the generation process itself.
This is possible by creating your own executable project and referencing or forking Asmerald.Generate library / executable.
*/

using System;
using Asmerald;
using Asmerald.Columns;

namespace master
{
    public partial class sales
    {
        public static TblStaffs staffs() => new TblStaffs();
        public class TblStaffs : ITable{
            string ITable.Name() => "sales.staffs";
            public Col_Staff_id Staff_id() => new Col_Staff_id();
            public Col_First_name First_name() => new Col_First_name();
            public Col_Last_name Last_name() => new Col_Last_name();
            public Col_Email Email() => new Col_Email();
            public Col_Phone Phone() => new Col_Phone();
            public Col_Active Active() => new Col_Active();
            public Col_Store_id Store_id() => new Col_Store_id();
            public Col_Manager_id Manager_id() => new Col_Manager_id();
            public static Col_Staff_id Staff_id(string tableAlias = "") => new Col_Staff_id(tableAlias);
            public static Col_First_name First_name(string tableAlias = "") => new Col_First_name(tableAlias);
            public static Col_Last_name Last_name(string tableAlias = "") => new Col_Last_name(tableAlias);
            public static Col_Email Email(string tableAlias = "") => new Col_Email(tableAlias);
            public static Col_Phone Phone(string tableAlias = "") => new Col_Phone(tableAlias);
            public static Col_Active Active(string tableAlias = "") => new Col_Active(tableAlias);
            public static Col_Store_id Store_id(string tableAlias = "") => new Col_Store_id(tableAlias);
            public static Col_Manager_id Manager_id(string tableAlias = "") => new Col_Manager_id(tableAlias);
            public class Col_Staff_id : IntegerColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "staff_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Staff_id() { }
                public Col_Staff_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
            public class Col_First_name : StringColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "first_name";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_First_name() { }
                public Col_First_name(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
            public class Col_Last_name : StringColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "last_name";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Last_name() { }
                public Col_Last_name(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
            public class Col_Email : StringColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "email";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Email() { }
                public Col_Email(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
            public class Col_Phone : StringColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "phone";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Phone() { }
                public Col_Phone(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
            public class Col_Active : ByteColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "active";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Active() { }
                public Col_Active(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
            public class Col_Store_id : IntegerColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "store_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Store_id() { }
                public Col_Store_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
            public class Col_Manager_id : IntegerColumn<TblStaffs>, ISelectColumn<TblStaffs>, ISelectColumnAlias<TblStaffs>
            {
                private readonly string _name = "manager_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Manager_id() { }
                public Col_Manager_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblStaffs> As(string name) => new AliasColumn<TblStaffs>(this, name);
                public override ISelectColumn<TblStaffs> Count() => new CountColumn<TblStaffs>(this);
            }
        }
    }
}
