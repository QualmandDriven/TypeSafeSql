/*
This file was automatically generated by Asmerald.Generate library / executable.
It is not recommened to make manual changes in this file as any changes to this file will be overwritten when the next generation happens.
In case you need modifications please refer to adjusting the generation process itself.
This is possible by creating your own executable project and referencing or forking Asmerald.Generate library / executable.
*/

using System;
using Asmerald;
using Asmerald.Columns;

namespace master
{
    public partial class production
    {
        public static TblCategories categories() => new TblCategories();
        public class TblCategories : ITable{
            string ITable.Name() => "production.categories";
            public Col_Category_id Category_id() => new Col_Category_id();
            public Col_Category_name Category_name() => new Col_Category_name();
            public static Col_Category_id Category_id(string tableAlias = "") => new Col_Category_id(tableAlias);
            public static Col_Category_name Category_name(string tableAlias = "") => new Col_Category_name(tableAlias);
            public class Col_Category_id : IntegerColumn<TblCategories>, ISelectColumn<TblCategories>, ISelectColumnAlias<TblCategories>
            {
                private readonly string _name = "category_id";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Category_id() { }
                public Col_Category_id(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblCategories> As(string name) => new AliasColumn<TblCategories>(this, name);
                public override ISelectColumn<TblCategories> Count() => new CountColumn<TblCategories>(this);
            }
            public class Col_Category_name : StringColumn<TblCategories>, ISelectColumn<TblCategories>, ISelectColumnAlias<TblCategories>
            {
                private readonly string _name = "category_name";
                string ISelectColumn.Name => string.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                readonly string? TableAlias;
                public Col_Category_name() { }
                public Col_Category_name(string tableAlias) { this.TableAlias = tableAlias; }
                public override string Name() => String.IsNullOrEmpty(TableAlias) ? _name : $"{TableAlias}.{_name}";
                public override ISelectColumnAlias<TblCategories> As(string name) => new AliasColumn<TblCategories>(this, name);
                public override ISelectColumn<TblCategories> Count() => new CountColumn<TblCategories>(this);
            }
        }
    }
}
