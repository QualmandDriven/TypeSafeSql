flowchart LR

Root -->|With| WithTable
Root -->|With| With

subgraph IWith
    With -->|Recursive| Recursive
    Recursive[Recursive<T>] -->|As| WithAs
    WithTable[WithTable<T>] -->|As| WithAs
    Recursive[Recursive<T>] -->|As| WithAsSelect[WithAsSelect<T>]
    WithTable[WithTable<T>] -->|As| WithAsSelect[WithAsSelect<T>]
    WithAs --> |Not| WithNot
    WithNot --> |Materialized| Materialized
    WithAs --> |Materialized| Materialized

    WithAs --> |With| WithTableAdditional[WithTableAdditional<T>]
    Materialized -->|With| WithTableAdditional[WithTableAdditional<T>]

    WithAsSelect[WithAsSelect<T>] --> IWithEnd
    Materialized --> IWithEnd
end


Root -->|Select| Select
Root -->|Select| SelectColumns

subgraph ISelect
    
    Select -->|All| All
    Distinct --> |All| All

    Select -->|Distinct| Distinct
    Select -->|Distinct| DistinctColumns

    SelectColumns -->|From| From
    All --> |From| From
    DistinctColumns --> |From| From

    subgraph IJoin
        ConditionalJoin[ConditionalJoin<T1, T2>] -->|On| On[On<T1, T2>]
        ConditionalJoin[ConditionalJoin<T1, T2>] -->|On| OnMulti[OnMulti<T1, T2>]

        NonConditionalJoin[NonConditionalJoin<T1, T2>] --> IJoinEnd
        On[On<T1, T2>] --> IJoinEnd
        OnMulti[OnMulti<T1, T2>] --> IJoinEnd
    end
    
    From[From<T>] -->|InnerJoin| ConditionalJoin[ConditionalJoin<T1, T2>]
    From[From<T>] -->|LeftJoin| ConditionalJoin[ConditionalJoin<T1, T2>]
    From[From<T>] -->|RightJoin| ConditionalJoin[ConditionalJoin<T1, T2>]
    From[From<T>] -->|FullJoin| ConditionalJoin[ConditionalJoin<T1, T2>]
    From[From<T>] -->|CrossJoin| NonConditionalJoin[NonConditionalJoin<T1, T2>]

    subgraph IWhere
        Where
        WhereGroup

        Where --> IWhereEnd
        WhereGroup --> IWhereEnd
    end

    IJoinEnd -->|Where| IWhere
    IJoinEnd -->|GroupBy| GroupBy
    IWhereEnd -->|GroupBy| GroupBy
    GroupBy -->|Having| Having
    IWhereEnd -->|Having| Having

    From[From<T>] --> ISelectEnd
    IJoinEnd --> ISelectEnd
    IWhereEnd --> ISelectEnd
    GroupBy --> ISelectEnd
    Having --> ISelectEnd
end

ISelectEnd -->|Union| Union
ISelectEnd -->|UnionAll| UnionAll
ISelectEnd -->|Intersect| Intersect
ISelectEnd -->|Except| Except

Union -->|Select| Select
UnionAll -->|Select| Select
Intersect -->|Select| Select
Except -->|Select| Select

subgraph IOrderBy
    OrderBy --> IOrderByEnd
    OrderBy -->|Collate| Collate
    Collate --> IOrderByEnd
    OrderBy -->|Asc| Asc
    Collate -->|Asc| Asc
    Asc --> IOrderByEnd
    OrderBy -->|Desc| Desc
    Collate -->|Desc| Desc
    Desc --> IOrderByEnd
    OrderBy -->|Nulls| Nulls
    Collate -->|Nulls| Nulls
    Asc -->|Nulls| Nulls
    Desc --> |Nulls| Nulls
    Nulls -->|First| First
    First --> IOrderByEnd
    Nulls -->|Last| Last
    Last --> IOrderByEnd
end

ISelectEnd -->|OrderBy| IOrderByStart
ISelectEnd -->|Limit| Limit
IOrderByEnd -->|Limit| Limit
Limit -->|Offset| Offset



Root -->|Insert| Insert
Root -->|Replace| Replace

subgraph IInsert
    Insert -->|Into| Into[Into<T>]
    Replace -->|Into| Into[Into<T>]
    Insert[Into<T>] -->|Or| InsertOr
    InsertOr -->|Abort| Abort
    InsertOr -->|Fail| Fail
    InsertOr -->|Ignore| Ignore
    InsertOr -->|Replace| Replace
    InsertOr -->|Rollback| Rollback
    Abort -->|Into| Into[Into<T>]
    Fail -->|Into| Into[Into<T>]
    Ignore -->|Into| Into[Into<T>]
    Rollback -->|Into| Into[Into<T>]

    Into[Into<T>] -->|As| IntoAs
    Into[Into<T>] -->|Values| InsertValues
    IntoAs -->|Values| InsertValues
    Into[Into<T>] -->|Select| InsertSelect<T>
    IntoAs -->|Select| InsertSelect<T>
    Into[Into<T>] -->|Default| Default
    IntoAs -->|Default| Default
    Default -->|Values| DefaultValues

    InsertValues --> IInsertEnd
    InsertSelect<T> --> IInsertEnd
    DefaultValues --> IInsertEnd
    IUpsert --> IInsertEnd
end

Root --> |Update| Update
subgraph IUpdate
    Update[Update<T>] -->|Set| UpdateSet[UpdateSet<T>]
    Update[Update<T>] -->|Or| UpdateOr[UpdateOr<T>]

    UpdateOr[UpdateOr<T>] -->|Abort| UpdateAbort[UpdateAbort<T>]
    UpdateOr[UpdateOr<T>] -->|Fail| UpdateFail[UpdateFail<T>]
    UpdateOr[UpdateOr<T>] -->|Ignore| UpdateIgnore[UpdateIgnore<T>]
    UpdateOr[UpdateOr<T>] -->|Replace| UpdateReplace[UpdateReplace<T>]
    UpdateOr[UpdateOr<T>] -->|Rollback| UpdateRollback[UpdateRollback<T>]

    UpdateAbort[UpdateAbort<T>] -->|Set| UpdateSet[UpdateSet<T>]
    UpdateFail[UpdateFail<T>] -->|Set| UpdateSet[UpdateSet<T>]
    UpdateIgnore[UpdateIgnore<T>] -->|Set| UpdateSet[UpdateSet<T>]
    UpdateReplace[UpdateReplace<T>] -->|Set| UpdateSet[UpdateSet<T>]
    UpdateRollback[UpdateRollback<T>] -->|Set| UpdateSet[UpdateSet<T>]

    UpdateSet[UpdateSet<T>] -->|From| UpdateFrom[UpdateFrom<T>]
    UpdateSet[UpdateSet<T>] -->|Where| UpdateWhere
    UpdateSet[UpdateSet<T>] -->|Where| IUpdateReturningStart

    subgraph IUpdateJoin
        UpdateFrom[UpdateFrom<T>] -->|InnerJoin| UpdateConditionalJoin[UpdateConditionalJoin<T1, T2>]
        UpdateFrom[UpdateFrom<T>] -->|LeftJoin| UpdateConditionalJoin[UpdateConditionalJoin<T1, T2>]
        UpdateFrom[UpdateFrom<T>] -->|RightJoin| UpdateConditionalJoin[UpdateConditionalJoin<T1, T2>]
        UpdateFrom[UpdateFrom<T>] -->|FullJoin| UpdateConditionalJoin[UpdateConditionalJoin<T1, T2>]
    end

    UpdateFrom[UpdateFrom<T>] --> |Where| UpdateWhere
    UpdateFrom[UpdateFrom<T>] --> |Returning| IUpdateReturningStart
    UpdateWhere --> |Returning| IUpdateReturningStart

    UpdateSet[UpdateSet<T>] --> IUpdateEnd
    UpdateFrom[UpdateFrom<T>] --> IUpdateEnd
    UpdateWhere --> IUpdateEnd
    IUpdateReturningEnd --> IUpdateEnd
end

InsertSelect<T> -->|On| UpsertOn
InsertValues -->|On| UpsertOn

subgraph IUpsert
    UpsertOn -->|Conflict| Conflict
    Conflict -->|Do| UpsertDo
    UpsertDo -->|Nothing| UpsertNothing
    UpsertDo -->|Update| UpsertUpdate
    UpsertUpdate -->|Set| UpsertSet
    UpsertSet -->|Where| UpsertWhere
    UpsertNothing -->|On|UpsertOn
    UpsertSet -->|On|UpsertOn
    UpsertWhere -->|On|UpsertOn

    UpsertNothing --> IUpsertEnd
    UpsertSet --> IUpsertEnd
    UpsertWhere --> IUpsertEnd
end


Returning -->|All|ReturningAll

IUpsertEnd -->|Returning| Returning
IUpdateEnd -->|Returning| Returning
IUpsertEnd -->|Returning| ReturningSelect
IUpdateEnd -->|Returning| ReturningSelect


Root -->|Delete| Delete

subgraph IDelete
    Delete -->|From| DeleteFrom[DeleteFrom<T>]
    DeleteFrom[DeleteFrom<T>] -->|Where| DeleteWhere
    DeleteFrom[DeleteFrom<T>] -->|Where| DeleteWhereGroup

    DeleteFrom[DeleteFrom<T>] --> IDeleteEnd
    DeleteWhere --> IDeleteEnd
    DeleteWhereGroup --> IDeleteEnd
end

DeleteWhere -->|Returning| Returning
DeleteWhereGroup -->|Returning| Returning